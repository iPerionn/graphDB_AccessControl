(window.webpackJsonp=window.webpackJsonp||[]).push([[6,35,36,45,52,74,75,144,146,147,159,160,162,163,165,250,257,268,270,274],{100:function(e,t,r){"use strict";r.r(t),r.d(t,"ImportParsingSettings",(function(){return o}));class o{constructor(){this.contextLink=void 0,this.preserveBNodeIds=!1,this.failOnUnknownDataTypes=!1,this.verifyDataTypeValues=!1,this.normalizeDataTypeValues=!1,this.failOnUnknownLanguageTags=!1,this.verifyLanguageTags=!1,this.normalizeLanguageTags=!1,this.stopOnError=!0}}},103:function(e,t,r){"use strict";r.r(t),r.d(t,"FileUtils",(function(){return o}));class o{static convertBytesToMegabytes(e){return Math.floor(e/1048576)}static getFilenameAndExtension(e){const t=e.lastIndexOf(".");return{filename:e.substring(0,t),extension:e.substring(t+1)}}}},126:function(e,t,r){"use strict";r.r(t),r.d(t,"ImportResource",(function(){return n}));var o=r(68),i=r(100),s=r(77);class n{constructor(e,t){this.hash=t(JSON.stringify(e)),this.name=e?e.name:void 0,this.status=e?e.status:o.ImportResourceStatus.NONE,this.message=e&&e.message?e.message:"",this.context=e&&e.context?e.context:"",this.replaceGraphs=e?e.replaceGraphs:[],this.baseURI=e?e.baseURI:void 0,this.forceSerial=!!e&&e.forceSerial,this.type=e?e.type:void 0,this.format=e?e.format:void 0,this.data=e?e.data:void 0,this.modifiedOn=e?e.lastModified:void 0,this.importedOn=e?e.imported:void 0,this.size=e?e.size:"",this.addedStatements=e?e.addedStatements:0,this.removedStatements=e?e.removedStatements:0,this.numReplacedGraphs=e?e.numReplacedGraphs:0,this.parserSettings=e?e.parserSettings:new i.ImportParsingSettings,this.requestIdHeadersToForward=e?e.requestIdHeadersToForward:void 0}isDirectory(){return s.ImportResourceType.DIRECTORY===this.type}isFile(){return s.ImportResourceType.FILE===this.type||s.ImportResourceType.URL===this.type||s.ImportResourceType.TEXT===this.type}isURL(){return s.ImportResourceType.URL===this.type}isText(){return s.ImportResourceType.TEXT===this.type}}},127:function(e,t,r){"use strict";r.r(t),r.d(t,"SortingType",(function(){return o}));const o={NAME:"NAME",SIZE:"SIZE",MODIFIED:"MODIFIED",IMPORTED:"IMPORTED",CONTEXT:"CONTEXT"}},190:function(e,t,r){"use strict";r.r(t),r.d(t,"Operation",(function(){return g}));r(7),r(32),r(191),r(192);var o=r(78),i=(r(193),r(194)),s=(r(195),r(196),r(197),r(198)),n=r(73),a=r(103),p=r(199),c=r(200),l=r(0),u=r(201),d=r(127),m=r(68);const f=angular.module("graphdb.framework.impex.import.controllers",["ui.bootstrap","toastr","graphdb.framework.core.services.repositories","graphdb.framework.utils.localstorageadapter","graphdb.framework.utils.uriutils","graphdb.framework.guides.services","graphdb.framework.rest.import.service","graphdb.framework.rest.upload.service","graphdb.framework.import.services.importcontext","graphdb.framework.impex.import.controllers.tab","graphdb.framework.impex.import.controllers.settings-modal","graphdb.framework.impex.import.controllers.import-url","graphdb.framework.impex.import.controllers.import-text-snippet","graphdb.framework.impex.import.controllers.file-override-confirmation"]),g={IMPORT:"import",BATCH_IMPORT:"batch_import",IMPORT_SNIPPET:"import_snippet",IMPORT_URL:"import_url",UPLOAD:"upload"},h="file",R="text",S="url";f.controller("ImportViewCtrl",["$scope","toastr","$interval","$repositories","$uibModal","$filter","$jwtAuth","$location","$translate","LicenseRestService","GuidesService","ModalService","ImportRestService","ImportContextService",function(e,t,r,p,u,f,h,R,S,I,v,F,y,T){const b=[];let U=null;let E=void 0;e.files=[],e.fileChecked={},e.activeTabId=T.getActiveTabId(),e.popoverTemplateUrl="settingsPopoverTemplate.html",e.fileFormatsExtended=s.FileFormats.getFileFormatsExtended(),e.fileFormatsHuman=s.FileFormats.getFileFormatsHuman()+S.instant("import.gz.zip"),e.textFileFormatsHuman=s.FileFormats.getTextFileFormatsHuman(),e.maxUploadFileSizeMB=0,e.SORTING_TYPES=d.SortingType,e.TAB_IDS=o.TABS,e.toTitleCase=e=>n.toTitleCase(e),e.setSettingsFor=(t,r,o,s,n=(()=>{}))=>{$(t,r).then(r=>{e.settingsFor=t,e.settings=r,""===t||"application/ld+json"===o||"application/x-ld+ndjson"===o||t.endsWith("jsonld")||t.endsWith("zip")||t.endsWith("gz")||"directory"===e.settings.type?e.settings.hasContextLink=!0:e.settings.hasContextLink=!1;const a=_.cloneDeep(e.settings),p={templateUrl:"js/angular/import/templates/settingsModal.html",controller:"SettingsModalController",windowClass:"import-settings-modal",resolve:{dialogModel:function(){return{operation:s,settings:_.cloneDeep(e.settings),hasParserSettings:e.isLocalLocation,defaultSettings:a,isMultiple:!t,activeTab:e.activeTabId}}},size:"lg"};v.isActive()&&(p.backdrop="static",p.keyboard=!1),u.open(p).result.then(t=>{if(e.currentFiles&&t.action===i.SettingsModalActions.UPLOAD_AND_IMPORT){const t=Object(c.filesToImportResource)(e.currentFiles,m.ImportResourceStatus.UPLOADING);T.updateResourcesForUpload(t)}e.settings=t.settings,""===e.settingsFor?e.importSelected():e.importFile(e.settingsFor,!0)},t=>{if(e.settings=t.settings,t.action===i.SettingsModalActions.CANCEL&&(e.currentFiles=[],s===g.UPLOAD&&(e.files=[])),e.currentFiles&&t.action===i.SettingsModalActions.UPLOAD_ONLY){const t=Object(c.filesToImportResource)(e.currentFiles,m.ImportResourceStatus.UPLOADING);T.updateResourcesForUpload(t)}n&&n()})})},e.updateImport=(t,r,o)=>{$(t,r).then(r=>{e.settingsFor=t,e.settings=r,e.importFile(t,o)})},e.importSelected=t=>{const r=new Set([...D(),...O()]),o=Array.from(r),i=()=>{const r=o.shift();r&&$(r).then(o=>{t&&(e.settings=o),e.importFile(r,!0,i)})};i()},e.isLocalLocation=()=>{const e=p.getActiveLocation();return e&&e.local},e.updateList=t=>{e.canWriteActiveRepo()&&e.updateListHttp(t)},e.onRepositoryChange=()=>{e.setRestricted(),e.isRestricted||(e.updateList(!0),x())},e.onImport=t=>{e.setSettingsFor(t.importResource.name,!1,t.importResource.format,g.IMPORT)},e.onStopImport=r=>{const i=r.importResource;(e.activeTabId===o.TABS.USER?y.stopUserDataImport:y.stopServerImport)(p.getActiveRepository(),{name:i.name,type:i.type}).success((function(){e.updateList()})).error((function(e){t.warning(S.instant("import.error.could.not.stop",{data:getError(e)}))}))},e.onRemove=e=>{const t=e.map(e=>e.name);A(t)},e.onReset=e=>{L(e,!1)},e.importAll=(t,r)=>{if(r)e.importSelected(t,r);else{let o="";1===t.length&&(o=t[0].importResource.name),e.setSettingsFor(o,r,void 0,g.BATCH_IMPORT)}},e.onEditResource=t=>{t.importResource.isText()&&e.openTextSnippetDialog(t.importResource)};const x=()=>(E=void 0,e.canWriteActiveRepo()?y.getDefaultSettings(p.getActiveRepository()).success((function(e){return E=e,E})).error((function(e){t.warning(S.instant("import.error.default.settings",{data:getError(e)}))})):Promise.resolve(E)),O=()=>T.getSelectedFilesNames(),D=()=>e.currentFiles.filter(e=>e.name).map(e=>e.name),A=(e=[])=>{const t="<br/>"+e.join("<br/>"),r=Object(l.decodeHTML)(S.instant("import.remove.confirm.msg",{name:t}));F.openConfirmation(S.instant("common.confirm"),r,()=>{L(e,!0)})},$=(t,r)=>r||_.isEmpty(t)||_.isEmpty(e.savedSettings[t])?(E?Promise.resolve(angular.copy(E)):x().then(()=>angular.copy(E))).then(e=>e):Promise.resolve(e.savedSettings[t]);e.updateListHttp=r=>{if(!p.getActiveRepository())return Promise.resolve();const i=e.activeTabId===o.TABS.USER?y.getUploadedFiles:y.getServerFiles,s=e.activeTabId;return i(p.getActiveRepository()).success((function(t){s===T.getActiveTabId()&&(T.updateImportedResources(Object(c.toImportResource)(t)),0===e.files.length||r?(e.files=t,T.updateFiles(e.files),e.files.forEach((function(t){t.type||(t.type=e.defaultType)}))):e.files.forEach((function(r){const o=_.find(t,_.matches({name:r.name}));r.status&&o&&_.assign(r,o),r.type||(r.type=e.defaultType)})),r&&o.TABS.USER===e.activeTabId&&(e.files=_.filter(e.files,(function(e){return void 0!==e.status})),T.updateFiles(e.files)),e.savedSettings=_.mapKeys(_.filter(e.files,"parserSettings"),"name"))})).error((function(e){t.warning(S.instant("import.error.could.not.get.files",{data:getError(e)}))}))};const L=(r,i)=>{if(!r||r.length<1)return;(e.activeTabId===o.TABS.USER?y.resetUserDataStatus:y.resetServerFileStatus)(p.getActiveRepository(),r,i).success((function(){e.updateList(!0)})).error((function(e){t.warning(S.instant("import.error.could.not.clear",{data:getError(e)}))}))},P=()=>{b.forEach(e=>e())},w=t=>{e.activeTabId=t,T.updateImportedResources([]),T.updateResourcesForUpload([]),T.updateShowLoader(!0),e.updateListHttp(!0).finally(()=>T.updateShowLoader(!1))};e.importViewControllerInit=()=>{b.push(e.$on("repositoryIsSet",e.onRepositoryChange)),b.push(e.$on("$destroy",()=>r.cancel(U))),b.push(T.onActiveTabIdUpdated(e=>w(e))),e.$on("$destroy",P),I.getInfo().success((function(t){e.appData={},e.appData.properties={};for(let r=0;r<t.length;r++)e.appData.properties[t[r].key]={source:t[r].source,value:t[r].value};e.maxUploadFileSizeMB=a.FileUtils.convertBytesToMegabytes(e.appData.properties["graphdb.workbench.maxUploadSize"].value)})).error((function(e){const r=getError(e);t.error(r,S.instant("common.error"))})),x(),U=r(()=>{e.updating||e.updateList(!1)},4e3),w(T.getActiveTabId())}}]),f.controller("ImportCtrl",["$scope","toastr","$controller","$translate","$repositories","ImportRestService","ImportContextService",function(e,t,r,i,s,n,a){e.columnKeys={name:"import.import_resource_tree.header.name",size:"import.import_resource_tree.header.size",modified:"import.import_resource_tree.header.modified",imported:"import.import_resource_tree.header.imported",context:"import.import_resource_tree.header.context"},angular.extend(this,r("ImportViewCtrl",{$scope:e})),e.defaultType="server",e.tabId="#import-server",e.importSelected=e=>{p(a.getSelectedFilesNames(),e)},e.importFile=function(e){p([e])};const p=function(r,o){e.canWriteActiveRepo()&&n.importServerFiles(s.getActiveRepository(),{importSettings:o?null:e.settings,fileNames:r}).success((function(){e.updateList(),e.fileChecked={}})).error((function(e){t.error(i.instant("import.could.not.send.file",{data:getError(e)}))}))};o.TABS.SERVER===a.getActiveTabId()&&e.importViewControllerInit()}]),f.controller("UploadCtrl",["$scope","toastr","$controller","$uibModal","$translate","$repositories","ImportRestService","UploadRestService","ModalService","ImportContextService","EventEmitterService",function(e,t,r,i,s,n,c,l,d,f,I){const v=new u.FilePrefixRegistry,F=[];e.columnKeys={name:"import.import_resource_tree.header.name",size:"import.import_resource_tree.header.size",modified:"import.import_resource_tree.header.uploaded",imported:"import.import_resource_tree.header.imported",context:"import.import_resource_tree.header.context"},angular.extend(this,r("ImportViewCtrl",{$scope:e})),e.defaultType=h,e.tabId="#import-user",e.currentFiles=[];let y=!1;e.pastedDataIdx=1,e.fileSelected=function(t,r,o,i,s){const n={files:o,cancel:!1};I.emit("filesForUploadSelected",n,t=>{if(!t.cancel){const t=s||[];T(t);const r=t.map(e=>e.name);let i=o||[];i=i.filter(e=>!r.includes(e.name)),O(i);const n=[],a=[];i.forEach(t=>{e.files.some(e=>e.name===t.name)?n.push(t):a.push(t)}),n.length>0?D(n,a):(e.currentFiles=[...i],y=!0,A())}})},e.importFile=(r,o,i)=>{const n=e.files.find(e=>e.name===r);n?n.type===R?b(n,o,i):n.type===S?E(n,o,i):x(n,o,i):t.warning(s.instant("import.no.such.file",{name:r}))},e.openTextSnippetDialog=t=>{t&&t.data;i.open({templateUrl:"js/angular/import/templates/textSnippet.html",controller:"ImportTextSnippetController",resolve:{text:function(){return t?t.data:""},format:function(){return t?t.format:"text/turtle"}}}).result.then(r=>{t?(t.data===r.text&&t.format===r.format||t.status===m.ImportResourceStatus.NONE||(t.status=m.ImportResourceStatus.NONE,t.message=s.instant("import.text.snippet.not.imported")),t.data=r.text,t.format=r.format,U(t)):(t={type:"text",name:"Text snippet "+p.DateUtils.formatCurrentDateTime(),format:r.format,data:r.text},e.files.unshift(t),e.updateImport(t.name,!1,!1)),r.startImport&&e.setSettingsFor(t.name,!1,t.format,g.IMPORT_SNIPPET)})},e.rdfDataFromURL=()=>{i.open({templateUrl:"js/angular/import/templates/urlImport.html",controller:"ImportUrlController",scope:e}).result.then((function(t){const r=_.find(e.files,{type:"url",name:t.url});r?r.format=t.format:e.files.unshift({type:"url",name:t.url,format:t.format,data:t.url}),e.updateImport(t.url,!0,!1),t.startImport&&e.setSettingsFor(t.url,!0,t.format,g.IMPORT_URL)}))};const T=e=>{e.length>0&&e.forEach((function(e){t.warning(s.instant("import.large.file",{name:e.name,size:a.FileUtils.convertBytesToMegabytes(e.size)}))}))},b=(r,o,i)=>{e.settings.name=r.name,e.settings.type=r.type,e.settings.data=r.data,e.settings.format=r.format,r.status=m.ImportResourceStatus.PENDING;(o?c.importTextSnippet:c.updateTextSnippet)(n.getActiveRepository(),e.settings).success((function(){e.updateList()})).error((function(e){t.error(s.instant("import.could.not.send.data",{data:getError(e)})),r.status=m.ImportResourceStatus.ERROR,r.message=getError(e)})).finally(i||function(){})},U=r=>{e.updating=!0,c.updateTextSnippet(n.getActiveRepository(),r).success((function(e){})).error((function(e){t.error(s.instant("import.could.not.update.text",{data:getError(e)}))})).finally((function(){e.updating=!1}))},E=(r,o,i)=>{e.settings.name=r.name,e.settings.type=r.type,e.settings.data=r.data,e.settings.format=r.format,r.status=m.ImportResourceStatus.PENDING;(o?c.importFromUrl:c.updateFromUrl)(n.getActiveRepository(),e.settings).success((function(){e.updateList()})).error((function(e){t.error(s.instant("import.could.not.send.url",{data:getError(e)}))})).finally(i||function(){})},x=(r,o,i)=>{e.settings.name=r.name;const a=l.createUploadPayload(r,e.settings);(o?l.uploadUserDataFile:l.updateUserDataFile)(n.getActiveRepository(),r,a).progress(e=>{const t=parseInt(100*e.loaded/e.total)||0,o=s.instant("import.file.upload.progress",{progress:t}),i=f.getResourceForUpload(r.name);i&&i.status!==m.ImportResourceStatus.UPLOAD_ERROR&&(i.status=t>=100?m.ImportResourceStatus.UPLOADED:m.ImportResourceStatus.UPLOADING,i.message=o,f.updateResourceForUpload(i))}).success(t=>{const o=f.getResourceForUpload(r.name);o&&o.status!==m.ImportResourceStatus.UPLOAD_ERROR&&(o.status=m.ImportResourceStatus.UPLOADED,o.message=void 0,f.updateResourceForUpload(o)),e.updateList()}).error(e=>{let o="";o=e?s.instant("import.could.not.upload.file",{data:o}):s.instant("import.upload.file.failure"),t.error(o),r.status=m.ImportResourceStatus.ERROR,r.message=o;const i=f.getResourceForUpload(r.name);i&&i.status!==m.ImportResourceStatus.UPLOADED&&(i.status=m.ImportResourceStatus.UPLOAD_ERROR,i.message=o,f.updateResourceForUpload(i))}).finally(()=>{e.currentFiles=e.currentFiles.filter(({name:e})=>e!==r.name),i()})},O=e=>{e.forEach((function(r){if("bz2"===r.name.substr(r.name.lastIndexOf(".")+1)){const o=e.indexOf(r);o>-1&&e.splice(o,1),t.error(s.instant("import.could.not.upload",{name:r.name}))}}))},D=(t,r)=>{const o=t.map(e=>e.name).join("<br/>");i.open({templateUrl:"js/angular/import/templates/file-override-confirmation.html",controller:"FileOverrideConfirmationController",windowClass:"confirm-duplicate-files-dialog",resolve:{duplicatedFiles:()=>o}}).result.then(o=>{if(o.overwrite)e.currentFiles.length?e.currentFiles=[...t,...r]:e.currentFiles.push(...t,...r);else{const o=v.prefixDuplicates(t);e.currentFiles=[...e.currentFiles,...o,...r]}y=!0,A()})},A=()=>{if(e.files=_.uniqBy(_.union(_.map(e.currentFiles,(function(e){return{name:e.name,type:"file",file:e}})),e.files),(function(e){return e.name})),e.savedSettings=_.mapKeys(_.filter(e.files,"parserSettings"),"name"),y&&e.currentFiles.length>0){$(),e.currentFiles.forEach(t=>{e.fileChecked[t.name]=!0});let t="";1===e.currentFiles.length&&(t=e.currentFiles[0].name),e.setSettingsFor(t,!1,void 0,g.UPLOAD,()=>{e.currentFiles.forEach(t=>{e.updateImport(t.name,!1,!1)})})}},$=()=>{Object.keys(e.fileChecked).forEach(t=>{e.fileChecked[t]=!1})};e.$on("$destroy",()=>{F.forEach(e=>e())});o.TABS.USER===f.getActiveTabId()&&(e.importViewControllerInit(),F.push(f.onFilesUpdated(e=>{v.buildPrefixesRegistry(e)})))}])},191:function(e,t){angular.module("graphdb.framework.rest.import.service",[]).factory("ImportRestService",o),o.$inject=["$http"];const r="rest/repositories";function o(e){return{getDefaultSettings:function(t){return e.get(`${r}/${t}/import/settings/default`)},getUploadedFiles:function(t){return e.get(`${r}/${t}/import/upload`)},getServerFiles:function(t){return e.get(`${r}/${t}/import/server`)},importServerFiles:function(t,o){return e.post(`${r}/${t}/import/server`,o)},importTextSnippet:function(t,o){return e.post(`${r}/${t}/import/upload/text`,o)},updateTextSnippet:function(t,o){return e.post(`${r}/${t}/import/upload/update/text`,o)},importFromUrl:function(t,o){return e.post(`${r}/${t}/import/upload/url`,o)},updateFromUrl:function(t,o){return e.post(`${r}/${t}/import/upload/update/url`,o)},stopServerImport:function(t,o){return e.delete(`${r}/${t}/import/server`,{params:o})},stopUserDataImport:function(t,o){return e.delete(`${r}/${t}/import/upload`,{params:o})},resetServerFileStatus:function(t,o,i=!0){return e({method:"DELETE",url:`${r}/${t}/import/server/status`,params:{remove:i},data:o,headers:{"Content-type":"application/json;charset=utf-8"}})},resetUserDataStatus:function(t,o,i=!0){return e({method:"DELETE",url:`${r}/${t}/import/upload/status`,params:{remove:i},data:o,headers:{"Content-type":"application/json;charset=utf-8"}})}}}},192:function(e,t){angular.module("graphdb.framework.rest.upload.service",[]).factory("UploadRestService",r),r.$inject=["$http","Upload","$translate"];function r(e,t,r){return{createUploadPayload:function(e,r){let o;o=e.file?{file:e.file,importSettings:t.jsonBlob(r)}:{importSettings:t.jsonBlob(r)};return o},uploadUserDataFile:function(e,r,o){return t.upload({url:`rest/repositories/${e}/import/upload/file`,data:o})},updateUserDataFile:function(e,r,o){return t.upload({url:`rest/repositories/${e}/import/upload/update/file`,data:o})}}}},193:function(e,t,r){"use strict";r.r(t);var o=r(78);function i(e,t,r){let i;e.isHelpVisible=!1,e.fileSizeLimitInfoTemplateUrl="js/angular/import/templates/fileSizeLimitInfo.html";const n=()=>{if(i.isPristine(e.activeTabId)){const t=r.getResources();e.isHelpVisible=!t||0===t.length}else e.isHelpVisible=i.isHelpVisible(e.activeTabId)};e.openTab=e=>{r.updateActiveTabId(e)},e.toggleHelp=()=>{i.setIsHelpVisible(e.activeTabId,!e.isHelpVisible),n()};const a=[];a.push(r.onActiveTabIdUpdated(r=>{e.activeTabId=r,t.hash(e.activeTabId),n()})),a.push(r.onResourcesUpdated(n));e.$on("$destroy",()=>a.forEach(e=>e())),(()=>{i=new s;const r=t.hash()||o.TABS.USER;e.openTab(r),n()})()}angular.module("graphdb.framework.impex.import.controllers.tab",[]).controller("TabController",i),i.$inject=["$scope","$location","ImportContextService"];class s{constructor(){this._helpVisibility={[o.TABS.USER]:{isHelpVisible:void 0},[o.TABS.SERVER]:{isHelpVisible:void 0}}}isPristine(e){return void 0===this._helpVisibility[e].isHelpVisible}setIsHelpVisible(e,t){this._helpVisibility[e].isHelpVisible=t}isHelpVisible(e){return this._helpVisibility[e]&&this._helpVisibility[e].isHelpVisible}}},194:function(e,t,r){"use strict";r.r(t),r.d(t,"SettingsModalActions",(function(){return s}));var o=r(78),i=r(190);angular.module("graphdb.framework.impex.import.controllers.settings-modal",[]).controller("SettingsModalController",n);const s={UPLOAD_ONLY:"upload_only",UPLOAD_AND_IMPORT:"upload_and_import",CANCEL:"cancel",CANCEL_IMPORT:"cancel_import"};function n(e,t,r,n,a,p){e.settings=p.settings,e.hasParserSettings=p.hasParserSettings,e.isMultiple=p.isMultiple,e.enableReplace=!(!e.settings.replaceGraphs||!e.settings.replaceGraphs.length),e.showAdvancedSettings=!1,e.activeTab=p.activeTab,e.userTabId=o.TABS.USER,e.isUploadOperation=p.operation===i.Operation.UPLOAD,e.hasError=function(e,t){return _.find(e,(function(e){return t===e.$name}))},e.ok=function(){e.settingsForm.replaceGraph.$setValidity("replaceGraph",!0),e.settingsForm.$valid&&(l(),t.close(c(s.UPLOAD_AND_IMPORT)))},e.cancel=function(){l(),t.dismiss(c(s.CANCEL))},e.onlyUpload=function(){l(),t.dismiss(c(s.UPLOAD_ONLY))},e.cancelImport=function(){l(),t.dismiss(c(s.CANCEL_IMPORT))},e.close=function(){l(),t.dismiss(c(s.CANCEL))},e.reset=function(){e.settings=_.cloneDeep(p.defaultSettings),e.target="data"},e.addReplaceGraph=function(t){let o=!0;"default"!==t&&(o=n.isValidIri(t,t.toString())),e.settingsForm.replaceGraph.$setTouched(),e.settingsForm.replaceGraph.$setValidity("replaceGraph",o),e.settingsForm.replaceGraph.$valid&&(e.settings.replaceGraphs=e.settings.replaceGraphs||[],-1===_.indexOf(e.settings.replaceGraphs,t)?(e.replaceGraph="",e.settings.replaceGraphs.push(t)):r.warning(a.instant("import.graph.already.in.list")))},e.checkEnterReplaceGraph=function(t,r){13===t.keyCode&&(t.preventDefault(),e.addReplaceGraph(r))},e.switchParserSettings=function(){e.showAdvancedSettings=!e.showAdvancedSettings};const c=function(t){return{settings:e.settings,action:t}},l=function(){"default"===e.target?e.settings.context="default":"data"===e.target&&(e.settings.context=""),e.enableReplace?"default"!==e.target&&"named"!==e.target||(e.settings.replaceGraphs=[e.settings.context]):e.settings.replaceGraphs=[]};e.settings.context?"default"===e.settings.context?(e.target="default",e.settings.context=""):e.target="named":e.target="data"}n.$inject=["$scope","$uibModalInstance","toastr","UriUtils","$translate","dialogModel"]},195:function(e,t){function r(e,t){e.importFormat={name:"Auto",type:""},e.startImport=!0,e.cancel=function(){t.dismiss()},e.ok=function(){t.close({url:e.dataUrl,format:e.importFormat.type,startImport:e.startImport})}}angular.module("graphdb.framework.impex.import.controllers.import-url",[]).controller("ImportUrlController",r),r.$inject=["$scope","$uibModalInstance","toastr"]},196:function(e,t){function r(e,t,r,o){e.importFormats=[{name:"RDF/JSON",type:"application/rdf+json"},{name:"JSON-LD",type:"application/ld+json"},{name:"NDJSON-LD",type:"application/x-ld+ndjson"},{name:"RDF/XML",type:"application/rdf+xml"},{name:"N3",type:"text/rdf+n3"},{name:"N-Triples",type:"text/plain"},{name:"N-Quads",type:"text/x-nquads"},{name:"Turtle",type:"text/turtle"},{name:"Turtle*",type:"application/x-turtlestar"},{name:"TriX",type:"application/trix"},{name:"TriG",type:"application/x-trig"},{name:"TriG*",type:"application/x-trigstar"}],e.rdfText=r,e.importFormat=e.importFormats.find(e=>e.type===o),e.startImport=!0,e.sizeLimit=1e5,e.setFormat=t=>{e.importFormat=t},e.cancel=()=>{t.dismiss()},e.ok=()=>{t.close({text:e.rdfText,format:e.importFormat.type,startImport:e.startImport})}}angular.module("graphdb.framework.impex.import.controllers.import-text-snippet",[]).controller("ImportTextSnippetController",r),r.$inject=["$scope","$uibModalInstance","text","format"]},197:function(e,t,r){"use strict";r.r(t);var o=r(0);function i(e,t,r,i,s){e.message=i.trustAsHtml(Object(o.decodeHTML)(r.instant("import.user_data.duplicates_confirmation.message",{duplicatedFiles:s}))),e.cancel=()=>{t.dismiss()},e.keepBoth=()=>{t.close({overwrite:!1})},e.overwrite=()=>{t.close({overwrite:!0})}}angular.module("graphdb.framework.impex.import.controllers.file-override-confirmation",[]).controller("FileOverrideConfirmationController",i),i.$inject=["$scope","$uibModalInstance","$translate","$sce","duplicatedFiles"]},198:function(e,t,r){"use strict";r.r(t),r.d(t,"FILE_FORMATS",(function(){return o})),r.d(t,"FileFormats",(function(){return i}));const o=["ttl","ttls","rdf","rj","n3","nt","nq","trig","trigs","trix","brf","owl","jsonld","xml","rdfs","ndjsonld","ndjson","jsonl"];class i{static getGZS(){return o.map(e=>`.${e}.gz`)}static getBasics(){return o.map(e=>"."+e)}static getFileFormatsExtended(){return[...this.getGZS(),...this.getBasics(),".zip"].join(", ")}static getFileFormatsHuman(){return[...this.getBasics()].join(" ")}static getTextFileFormatsHuman(){return this.getBasics().filter(e=>".brf"!==e).join(" ")}}},199:function(e,t,r){"use strict";r.r(t),r.d(t,"DateUtils",(function(){return o}));class o{static formatCurrentDateTime(){const e=new Date;return e.getFullYear()+"-"+_.padStart(e.getMonth()+1,2,"0")+"-"+_.padStart(e.getDate(),2,"0")+" "+_.padStart(e.getHours(),2,"0")+":"+_.padStart(e.getMinutes(),2,"0")+":"+_.padStart(e.getSeconds(),2,"0")+"."+_.padStart(e.getMilliseconds(),3,"0")}}},200:function(e,t,r){"use strict";r.r(t),r.d(t,"toImportResource",(function(){return s})),r.d(t,"fileToImportResource",(function(){return n})),r.d(t,"filesToImportResource",(function(){return a}));var o=r(126),i=r(17);const s=e=>{const t=Object(i.md5HashGenerator)();return e.map(e=>new o.ImportResource(e,t))},n=e=>{const t=Object(i.md5HashGenerator)();return new o.ImportResource({name:e.name,size:e.size,type:"file",modifiedOn:e.lastModified,file:e},t)},a=(e,t)=>{const r=Object(i.md5HashGenerator)();return e.map(e=>new o.ImportResource({name:e.name,size:e.size,type:"file",modifiedOn:void 0,file:e,status:t},r))}},201:function(e,t,r){"use strict";r.r(t),r.d(t,"FilePrefixRegistry",(function(){return i}));var o=r(103);class i{constructor(){this.filesPrefixRegistry={}}buildPrefixesRegistry(e){e.filter(e=>"file"===e.type).forEach(e=>{const t=o.FileUtils.getFilenameAndExtension(e.name).filename,r=t.lastIndexOf("-");let i=r<0?0:t.substring(r+1),s=t.substring(0,r);if(r<0?(i=0,s=t):(i=t.substring(r+1),s=t.substring(0,r)),i){i=parseInt(i);const e=this.filesPrefixRegistry[s]||0;this.filesPrefixRegistry[s]=e<i?i:e}else this.filesPrefixRegistry[s]=0})}prefixDuplicates(e){return e.map(e=>{const{filename:t,extension:r}=o.FileUtils.getFilenameAndExtension(e.name),i=`${t}-${this.getIndexForFile(t)}.${r}`;return new File([e],i,{type:e.type,lastModified:e.lastModified})})}getIndexForFile(e){let t=this.filesPrefixRegistry[e];return void 0!==t?t++:t=0,this.filesPrefixRegistry[e]=t,t}}},68:function(e,t,r){"use strict";r.r(t),r.d(t,"ImportResourceStatus",(function(){return o}));const o={NONE:"NONE",UPLOADING:"UPLOADING",UPLOAD_ERROR:"UPLOAD_ERROR",UPLOADED:"UPLOADED",PENDING:"PENDING",IMPORTING:"IMPORTING",DONE:"DONE",ERROR:"ERROR",INTERRUPTING:"INTERRUPTING"}},73:function(e,t,r){"use strict";r.r(t),r.d(t,"removeSpecialChars",(function(){return i})),r.d(t,"toBoolean",(function(){return s})),r.d(t,"toTitleCase",(function(){return n}));var o=r(27);const i=e=>e.replace(/[()']/g,""),s=e=>"string"==typeof e?"true"===e:Boolean(e),n=e=>e?Object(o.upperFirst)(e.toLowerCase()):e},77:function(e,t,r){"use strict";r.r(t),r.d(t,"ImportResourceType",(function(){return o}));const o={DIRECTORY:"directory",FILE:"file",URL:"url",TEXT:"text"}},78:function(e,t,r){"use strict";r.r(t),r.d(t,"TABS",(function(){return s}));var o=r(27),i=r(68);const s={USER:"user",SERVER:"server"};function n(e){let t=s.USER,r=[],n=[],a=[],p=!0,c=[];return{updateActiveTabId:function(r){t=r,e.emitSync("activeTabIdUpdated",d())},getActiveTabId:d,onActiveTabIdUpdated:function(t){return e.subscribeSync("activeTabIdUpdated",e=>t(e))},getFiles:f,addFile:function(t){const r=f();r.push(t),m(r),e.emitSync("fileAdded",Object(o.cloneDeep)(t))},updateFiles:m,onFilesUpdated:function(t){return e.subscribeSync("filesUpdated",e=>t(e))},getImportedResources:g,updateImportedResources:function(t){r=t,e.emitSync("importedResourcesUpdated",g()),e.emitSync("resourcesUpdated",h())},onImportedResourcesUpdated:function(t){return e.subscribeSync("importedResourcesUpdated",e=>t(e))},getResources:h,onResourcesUpdated:function(t){return e.subscribeSync("resourcesUpdated",e=>t(e))},updateShowLoader:function(t){p=t,e.emitSync("showLoaderUpdated",u())},getShowLoader:u,onShowLoaderUpdated:function(t){return e.subscribeSync("showLoaderUpdated",e=>t(e))},updateSelectedFilesNames:function(t){c=Object(o.cloneDeep)(t),e.emitSync("selectedFilesNamesUpdated",l())},getSelectedFilesNames:l,onSelectedFilesNamesUpdated:function(t){return e.subscribeSync("selectedFilesNamesUpdated",e=>t(e))},updateResourceForUpload:function(e){const t=S(),r=t.find(({name:t})=>t===e.name);r?Object.assign(r,e):t.push(e);R(t)},getResourceForUpload:function(e){return Object(o.cloneDeep)(n.find(({name:t})=>t===e))},updateResourcesForUpload:R,getResourcesForUpload:S,onResourcesForUploadChanged:function(t){return e.subscribeSync("resourcesForUploadChanged",e=>t(e))}};function l(){return Object(o.cloneDeep)(c)}function u(){return p}function d(){return t}function m(t){a=Object(o.cloneDeep)(t),e.emitSync("filesUpdated",f())}function f(){return Object(o.cloneDeep)(a)}function g(){return Object(o.cloneDeep)(r)||[]}function h(){const e=g();let t=S();const r=[],o=[];return e.forEach(({name:e})=>{const s=t.find(({name:t})=>t===e);s&&(s.status===i.ImportResourceStatus.UPLOADED?r.push(s):o.push(s))}),r.length>0&&(t=t.filter(({name:e})=>!r.some(({name:t})=>t===e)),R(t,!1)),e.filter(({name:e})=>!o.some(t=>e===t)).concat(t)}function R(t,r=!0){n=Object(o.cloneDeep)(t),e.emitSync("resourcesForUploadChanged",S()),r&&e.emitSync("resourcesUpdated",h())}function S(){return Object(o.cloneDeep)(n)||[]}}angular.module("graphdb.framework.import.services.importcontext",[]).factory("ImportContextService",n),n.$inject=["EventEmitterService"]}}]);