(window.webpackJsonp=window.webpackJsonp||[]).push([[323],{420:function(module,exports){module.exports=function(obj){obj||(obj={});var __t,__p="";with(obj)__p+='<div class="ot-loader ot-main-loader" onto-loader size="50" ng-if="showLoader"></div>\n<div class="import-resource-tree mt-2" ng-if="!showLoader && resources && !resources.isEmpty()">\n    <div class="import-resource-tree-header">\n        <div class="import-resources-actions">\n            <div class="import-resource-status-dropdown btn-group" uib-dropdown>\n                <button type="button" uib-dropdown-toggle class="btn btn-secondary dropdown-toggle"\n                        ng-class="{\'selected\': selectedByStatus}">\n                    <input type="checkbox" prop-indeterminate="areAllDisplayedImportResourcesPartialSelected"\n                           ng-model="areAllDisplayedImportResourcesSelected">\n                    {{selectedByStatus ? ((\'import.import_resource_tree.status.\' + selectedByStatus) | translate) : \'\n                    \'}}\n                </button>\n                <ul class="dropdown-menu" role="menu">\n                    <li>\n                        <button type="button" class="dropdown-item"\n                                ng-click="selectResourceWithStatus(STATUS_OPTIONS.ALL)">\n                            {{\'import.import_resource_tree.status.ALL\' | translate}}\n                        </button>\n                        <button type="button" class="dropdown-item"\n                                ng-click="selectResourceWithStatus(STATUS_OPTIONS.NONE)">\n                            {{\'import.import_resource_tree.status.NONE\' | translate}}\n                        </button>\n                        <button type="button" class="dropdown-item"\n                                ng-click="selectResourceWithStatus(STATUS_OPTIONS.IMPORTED)">\n                            {{\'import.import_resource_tree.status.IMPORTED\' | translate}}\n                        </button>\n                        <button type="button" class="dropdown-item"\n                                ng-click="selectResourceWithStatus(STATUS_OPTIONS.NOT_IMPORTED)">\n                            {{\'import.import_resource_tree.status.NOT_IMPORTED\' | translate}}\n                        </button>\n                    </li>\n                </ul>\n            </div>\n            <div class="import-resource-selected-actions btn-group"\n                 ng-if="hasSelection">\n                <div class="btn-group batch-import-dropdown" uib-dropdown\n                     uib-popover="{{\'import.selected.items\' | translate}}"\n                     popover-trigger="mouseenter"\n                     popover-placement="top">\n                    <button type="button" class="btn btn-primary batch-import-btn" ng-click="importAll(false)">\n                        <span class="icon-import"></span>\n                        {{\'common.import\' | translate}}\n                    </button>\n                    <button type="button" class="btn btn-primary dropdown-toggle-split dropdown-toggle"\n                            uib-dropdown-toggle>\n                        <span class="sr-only"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li>\n                            <button type="button"\n                                    class="dropdown-item import-without-change-btn batch-import-without-change-btn"\n                                    ng-click="importAll(true)">\n                                {{\'import.without.changing.settings\' | translate}}\n                            </button>\n                        </li>\n                    </ul>\n                </div>\n                <button class="btn btn-secondary reset-status-btn batch-reset-btn" type="button"\n                        ng-click="onResetStatus()"\n                        ng-if="canResetSelectedResources"\n                        uib-popover="{{\'import.reset.last.imported\' | translate}}"\n                        popover-trigger="mouseenter"\n                        popover-placement="top">\n                    {{\'import.reset.status\' | translate}}\n                </button>\n                <button ng-if="canRemoveResource" class="btn btn-secondary remove-resources-btn" type="button"\n                        ng-click="onRemoveResources()"\n                        uib-popover="{{\'import.remove.selected\' | translate}}"\n                        popover-trigger="mouseenter"\n                        popover-placement="top">\n                    {{\'import.remove.btn\' | translate}}\n                </button>\n            </div>\n        </div>\n        <div class="import-resource-tree-filter btn-group">\n            <div ng-if="showTypeFilter" class="import-resource-type-filter mr-1">\n                <button class="btn btn-secondary show-all-resources-btn"\n                        ng-click="filterByTypeChanged(TYPE_FILTER_OPTIONS.ALL)"\n                        ng-class="{\'active\': TYPE_FILTER_OPTIONS.ALL === filterByType}">\n                    <em class="icon-file"></em>\n                    <em class="icon-folder"></em>\n                </button>\n                <button class="btn btn-secondary show-only-folders-btn"\n                        ng-click="filterByTypeChanged(TYPE_FILTER_OPTIONS.DIRECTORY)"\n                        ng-class="{\'active\': TYPE_FILTER_OPTIONS.DIRECTORY === filterByType}">\n                    <em class="icon-folder"></em>\n                </button>\n                <button class="btn btn-secondary show-only-files-btn"\n                        ng-click="filterByTypeChanged(TYPE_FILTER_OPTIONS.FILE)"\n                        ng-class="{\'active\': TYPE_FILTER_OPTIONS.FILE === filterByType}">\n                    <em class="icon-file"></em>\n                </button>\n            </div>\n\n            <div class="import-resource-filter btn-group">\n                <div class="input-group">\n                    <input id="fileQuery" class="form-control" type="text" ng-model="filterByFileName"\n                           autocomplete="off"\n                           ng-change="filterByFileNameChanged(filterByFileName)"\n                           placeholder="{{\'import.type.to.filter\' | translate}}">\n                </div>\n            </div>\n        </div>\n    </div>\n    <table class="import-resource-table mt-2">\n        <thead>\n        <tr>\n            <th class="header-cell cell-select"></th>\n            <th class="header-cell cell-name" ng-click="sort(SORTING_TYPES.NAME)">\n                <span ng-class="{\n                \'sorting_desc\': SORTING_TYPES.NAME === sortedBy &&  !sortAsc,\n                \'sorting_asc\': SORTING_TYPES.NAME === sortedBy && sortAsc,\n                \'sorting\': SORTING_TYPES.NAME !== sortedBy\n                }">{{columnKeys.name | translate}}</span>\n            </th>\n            <th class="header-cell cell-size" ng-click="sort(SORTING_TYPES.SIZE)">\n                <span ng-class="{\n                \'sorting_desc\': SORTING_TYPES.SIZE === sortedBy &&  !sortAsc,\n                \'sorting_asc\': SORTING_TYPES.SIZE === sortedBy && sortAsc,\n                \'sorting\': SORTING_TYPES.SIZE !== sortedBy\n                }">{{columnKeys.size | translate}}</span>\n            </th>\n            <th class="header-cell cell-modified" ng-click="sort(SORTING_TYPES.MODIFIED)">\n                <span ng-class="{\n                \'sorting_desc\': SORTING_TYPES.MODIFIED === sortedBy &&  !sortAsc,\n                \'sorting_asc\': SORTING_TYPES.MODIFIED === sortedBy && sortAsc,\n                \'sorting\': SORTING_TYPES.MODIFIED !== sortedBy\n                }">{{columnKeys.modified | translate}}</span>\n            </th>\n            <th class="header-cell cell-imported" ng-click="sort(SORTING_TYPES.IMPORTED)">\n                <span ng-class="{\n                \'sorting_desc\': SORTING_TYPES.IMPORTED === sortedBy &&  !sortAsc,\n                \'sorting_asc\': SORTING_TYPES.IMPORTED === sortedBy && sortAsc,\n                \'sorting\': SORTING_TYPES.IMPORTED !== sortedBy\n                }">{{columnKeys.imported | translate}}</span>\n            </th>\n            <th class="header-cell cell-context" ng-click="sort(SORTING_TYPES.CONTEXT)">\n                <span ng-class="{\n                \'sorting_desc\': SORTING_TYPES.CONTEXT === sortedBy &&  !sortAsc,\n                \'sorting_asc\': SORTING_TYPES.CONTEXT === sortedBy && sortAsc,\n                \'sorting\': SORTING_TYPES.CONTEXT !== sortedBy\n                }">{{columnKeys.context | translate}}</span>\n            </th>\n            <th class="header-cell import-resource-action"></th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr ng-repeat-start="resource in displayResources track by resource.importResource.hash"\n            class="row title-row"\n            ng-class="{ \'even-row-start\': $even, \'odd-row-start\': $odd}">\n            <td class="cell cell-select">\n                <input type="checkbox" ng-model="resource.selected" ng-click="selectionChanged(resource)"\n                       prop-indeterminate="resource.partialSelected" class="select-checkbox">\n            </td>\n            <td ng-style="{\'padding-left\': (filterByType !== TYPE_FILTER_OPTIONS.FILE ? resource.indent : \'8px\')}"\n                class="cell">\n                <span class="cell-title">\n                    <em ng-class="resource.iconClass"></em>\n                    <div ng-if="onEditResource && resource.isEditable">\n                        <a href="#" ng-click="editResource(resource)" title="{{resource.name}}">\n                            <strong>{{resource.shortenedName ? resource.shortenedName : resource.name}}</strong>\n                        </a>\n                    </div>\n                    <div ng-if="!resource.isEditable" title="{{resource.name}}">\n                        <strong>{{resource.shortenedName ? resource.shortenedName : resource.name}}</strong>\n                    </div>\n                </span>\n            </td>\n            <td class="cell cell-size">\n                {{ resource.importResource.size | humanReadableSize}}\n            </td>\n            <td class="cell cell-modified"\n                ng-class="{\'font-weight-bold\': resource.isModifiedBiggerThanImported}">\n                {{ resource.importResource.modifiedOn ? (resource.importResource.modifiedOn | date:\'yyyy-MM-dd, HH:mm\') : \'\' }}\n            </td>\n            <td class="cell cell-imported"\n                ng-class="{\'font-weight-bold\': resource.isImportedBiggerThanModified}">\n                {{ resource.importResource.importedOn ? (resource.importResource.importedOn | date:\'yyyy-MM-dd, HH:mm\') : \'\' }}\n            </td>\n            <td class="cell">\n                <a if="resource.importResource.context"\n                   title="{{resource.importResource.context}}"\n                   class="uri-link"\n                   href="{{\'resource?uri=\' + resource.importResource.context + \'&role=context\'}}">\n                    {{resource.shortenedContext ? resource.shortenedContext : resource.importResource.context}}\n                </a>\n            </td>\n            <td class="cell">\n                <div class="cell-actions">\n                    <import-resource-status-info class="btn btn-sm import"\n                                                 ng-if="resource.hasStatusInfo"\n                                                 resource="resource"></import-resource-status-info>\n                    <button role="button" class="btn btn-link btn-sm secondary import-resource-action-reset-btn"\n                            ng-click="resetStatus(resource)"\n                            ng-if="resource.canResetStatus"\n                            ng-disabled="hasSelection"\n                            gdb-tooltip="{{\'import.reset.status\' | translate}}">\n                        <span class="icon-close"></span>\n                    </button>\n                    <button ng-if="canRemoveResource && resource.importResource.status !== ImportResourceStatus.UPLOADING && resource.importResource.status !== ImportResourceStatus.UPLOADED && resource.importResource.status !== ImportResourceStatus.UPLOAD_ERROR"\n                            class="btn btn-link btn-sm secondary import-resource-action-remove-btn"\n                            ng-disabled="hasSelection"\n                            ng-click="removeResource(resource)"\n                            gdb-tooltip="{{\'import.remove.btn\' | translate}}">\n                        <em class="icon-trash"></em>\n                    </button>\n                    <button class="btn btn-primary btn-sm import-resource-action-import-btn"\n                            ng-if="resource.isImportable"\n                            ng-click="onImport({resource: resource})"\n                            ng-disabled="hasSelection"\n                            guide-selector="import-file-{{resource.name}}"\n                            gdb-tooltip="{{\'import.import.btn\' | translate}}">\n                        <span class="icon-import"></span>\n                    </button>\n                    <button class="btn btn-sm"\n                            ng-click="stopImport(resource)"\n                            ng-disabled="resource.importResource.status === ImportResourceStatus.INTERRUPTING"\n                            ng-if="resource.hasOngoingImport"\n                            gdb-tooltip="{{\'import.import_resource_tree.action.interrupt_import\' | translate}}">\n                        <span class="icon-close"></span>\n                        {{\'import.import_resource_tree.action.abort\' | translate}}\n                    </button>\n                </div>\n            </td>\n        </tr>\n        <tr ng-repeat-end class="row info-row" ng-class="{ \'even-row-end\': $even, \'odd-row-end\': $odd}">\n            <td class="cell cell-select"></td>\n            <td colspan="6" ng-style="{\'padding-left\': (filterByType !== TYPE_FILTER_OPTIONS.FILE ? resource.indent : \'8px\')}"\n                class="cell">\n                <import-resource-message resource="resource"></import-resource-message>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n</div>\n';return __p}}}]);