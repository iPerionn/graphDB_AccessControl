(window.webpackJsonp=window.webpackJsonp||[]).push([[64,109],{155:function(t,o,e){"use strict";e.r(o);e(81);function n(t,o,e,n,r){let a,s;t.nodes=[],t.clusterNodes=[],t.locations=[],t.deleteLocation=(o,n)=>{o.preventDefault(),o.stopPropagation(),e.deleteLocation(n).then(()=>t.locations=t.locations.filter(t=>t.endpoint!==n.endpoint))},t.addNodeToList=o=>{o.rpcAddress&&(t.nodes.push(o),t.locations=t.locations.filter(t=>t.endpoint!==o.endpoint))},t.removeNodeFromList=(o,e)=>{t.nodes.splice(o,1),t.locations.push(e)},t.addLocation=()=>{r.addLocation().then(o=>{o&&t.locations.push(o)})},t.ok=()=>{o.close(t.nodes)},t.cancel=()=>{o.dismiss("cancel")};a=_.cloneDeep(e.clusterModel),t.clusterNodes=a.nodes.map(t=>({rpcAddress:t.address,endpoint:t.endpoint})),s=t.clusterNodes.map(t=>t.endpoint),t.locations=a.locations.filter(t=>!s.includes(t.endpoint)),t.locations.forEach(t=>t.isNew=!0)}angular.module("graphdb.framework.clustermanagement.controllers.add-nodes",[]).controller("AddNodesDialogCtrl",n),n.$inject=["$scope","$uibModalInstance","data","$uibModal","RemoteLocationsService"]},81:function(t,o,e){"use strict";e.r(o);e(36);function n(t,o,e,n,r){return{addLocation:function(){let t;return e.open({templateUrl:"js/angular/templates/modal/add-location.html",windowClass:"addLocationDialog",controller:"AddLocationFromClusterCtrl"}).result.then(e=>(t=e,t.isLocal=!1,t.endpoint=t.uri,function(t){let e;return n.addLocation(t).catch(t=>{const e=getError(t.data,t.status);return o.error(e,r.instant("common.error")),!1}).then(t=>!!t&&a()).then(o=>{if(!1!==o)return e=o.find(o=>o.endpoint===t.uri),e})}(t)))},getLocationsWithRpcAddresses:a};function a(){return n.getLocations().then((function(t){return t.data.map(t=>({isLocal:t.local,endpoint:t.uri,rpcAddress:t.rpcAddress||"",error:t.errorMsg}))})).catch((function(t){const e=getError(t.data,t.status);o.error(e,r.instant("common.error"))})).then(t=>{if(t)return function(t){const o=t.filter(t=>!t.isLocal&&!t.error).map(t=>function(t){return n.getLocationRpcAddress(t.endpoint)}(t).then(o=>(t.rpcAddress=o.data,t.isAvailable=!0,t)).catch(o=>{t.isAvailable=!1,t.error=getError(o.data,o.status)}));return Promise.allSettled(o).then(()=>t)}(t)})}}angular.module("graphdb.framework.clustermanagement.services.remote-locations",[]).factory("RemoteLocationsService",n),n.$inject=["$http","toastr","$uibModal","LocationsRestService","$translate"]}}]);