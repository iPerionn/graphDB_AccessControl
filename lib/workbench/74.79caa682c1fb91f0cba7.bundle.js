(window.webpackJsonp=window.webpackJsonp||[]).push([[74,270],{103:function(e,i,t){"use strict";t.r(i),t.d(i,"FileUtils",(function(){return s}));class s{static convertBytesToMegabytes(e){return Math.floor(e/1048576)}static getFilenameAndExtension(e){const i=e.lastIndexOf(".");return{filename:e.substring(0,i),extension:e.substring(i+1)}}}},201:function(e,i,t){"use strict";t.r(i),t.d(i,"FilePrefixRegistry",(function(){return n}));var s=t(103);class n{constructor(){this.filesPrefixRegistry={}}buildPrefixesRegistry(e){e.filter(e=>"file"===e.type).forEach(e=>{const i=s.FileUtils.getFilenameAndExtension(e.name).filename,t=i.lastIndexOf("-");let n=t<0?0:i.substring(t+1),r=i.substring(0,t);if(t<0?(n=0,r=i):(n=i.substring(t+1),r=i.substring(0,t)),n){n=parseInt(n);const e=this.filesPrefixRegistry[r]||0;this.filesPrefixRegistry[r]=e<n?n:e}else this.filesPrefixRegistry[r]=0})}prefixDuplicates(e){return e.map(e=>{const{filename:i,extension:t}=s.FileUtils.getFilenameAndExtension(e.name),n=`${i}-${this.getIndexForFile(i)}.${t}`;return new File([e],n,{type:e.type,lastModified:e.lastModified})})}getIndexForFile(e){let i=this.filesPrefixRegistry[e];return void 0!==i?i++:i=0,this.filesPrefixRegistry[e]=i,i}}}}]);