(window.webpackJsonp=window.webpackJsonp||[]).push([[35,75,162,163,165,274],{127:function(e,t,n){"use strict";n.r(t),n.d(t,"SortingType",(function(){return o}));const o={NAME:"NAME",SIZE:"SIZE",MODIFIED:"MODIFIED",IMPORTED:"IMPORTED",CONTEXT:"CONTEXT"}},68:function(e,t,n){"use strict";n.r(t),n.d(t,"ImportResourceStatus",(function(){return o}));const o={NONE:"NONE",UPLOADING:"UPLOADING",UPLOAD_ERROR:"UPLOAD_ERROR",UPLOADED:"UPLOADED",PENDING:"PENDING",IMPORTING:"IMPORTING",DONE:"DONE",ERROR:"ERROR",INTERRUPTING:"INTERRUPTING"}},73:function(e,t,n){"use strict";n.r(t),n.d(t,"removeSpecialChars",(function(){return r})),n.d(t,"toBoolean",(function(){return c})),n.d(t,"toTitleCase",(function(){return s}));var o=n(27);const r=e=>e.replace(/[()']/g,""),c=e=>"string"==typeof e?"true"===e:Boolean(e),s=e=>e?Object(o.upperFirst)(e.toLowerCase()):e},77:function(e,t,n){"use strict";n.r(t),n.d(t,"ImportResourceType",(function(){return o}));const o={DIRECTORY:"directory",FILE:"file",URL:"url",TEXT:"text"}},78:function(e,t,n){"use strict";n.r(t),n.d(t,"TABS",(function(){return c}));var o=n(27),r=n(68);const c={USER:"user",SERVER:"server"};function s(e){let t=c.USER,n=[],s=[],u=[],i=!0,d=[];return{updateActiveTabId:function(n){t=n,e.emitSync("activeTabIdUpdated",f())},getActiveTabId:f,onActiveTabIdUpdated:function(t){return e.subscribeSync("activeTabIdUpdated",e=>t(e))},getFiles:R,addFile:function(t){const n=R();n.push(t),l(n),e.emitSync("fileAdded",Object(o.cloneDeep)(t))},updateFiles:l,onFilesUpdated:function(t){return e.subscribeSync("filesUpdated",e=>t(e))},getImportedResources:m,updateImportedResources:function(t){n=t,e.emitSync("importedResourcesUpdated",m()),e.emitSync("resourcesUpdated",U())},onImportedResourcesUpdated:function(t){return e.subscribeSync("importedResourcesUpdated",e=>t(e))},getResources:U,onResourcesUpdated:function(t){return e.subscribeSync("resourcesUpdated",e=>t(e))},updateShowLoader:function(t){i=t,e.emitSync("showLoaderUpdated",p())},getShowLoader:p,onShowLoaderUpdated:function(t){return e.subscribeSync("showLoaderUpdated",e=>t(e))},updateSelectedFilesNames:function(t){d=Object(o.cloneDeep)(t),e.emitSync("selectedFilesNamesUpdated",a())},getSelectedFilesNames:a,onSelectedFilesNamesUpdated:function(t){return e.subscribeSync("selectedFilesNamesUpdated",e=>t(e))},updateResourceForUpload:function(e){const t=O(),n=t.find(({name:t})=>t===e.name);n?Object.assign(n,e):t.push(e);E(t)},getResourceForUpload:function(e){return Object(o.cloneDeep)(s.find(({name:t})=>t===e))},updateResourcesForUpload:E,getResourcesForUpload:O,onResourcesForUploadChanged:function(t){return e.subscribeSync("resourcesForUploadChanged",e=>t(e))}};function a(){return Object(o.cloneDeep)(d)}function p(){return i}function f(){return t}function l(t){u=Object(o.cloneDeep)(t),e.emitSync("filesUpdated",R())}function R(){return Object(o.cloneDeep)(u)}function m(){return Object(o.cloneDeep)(n)||[]}function U(){const e=m();let t=O();const n=[],o=[];return e.forEach(({name:e})=>{const c=t.find(({name:t})=>t===e);c&&(c.status===r.ImportResourceStatus.UPLOADED?n.push(c):o.push(c))}),n.length>0&&(t=t.filter(({name:e})=>!n.some(({name:t})=>t===e)),E(t,!1)),e.filter(({name:e})=>!o.some(t=>e===t)).concat(t)}function E(t,n=!0){s=Object(o.cloneDeep)(t),e.emitSync("resourcesForUploadChanged",O()),n&&e.emitSync("resourcesUpdated",U())}function O(){return Object(o.cloneDeep)(s)||[]}}angular.module("graphdb.framework.import.services.importcontext",[]).factory("ImportContextService",s),s.$inject=["EventEmitterService"]}}]);