(window.webpackJsonp=window.webpackJsonp||[]).push([[52,75,162],{193:function(e,t,i){"use strict";i.r(t);var n=i(78);function s(e,t,i){let s;e.isHelpVisible=!1,e.fileSizeLimitInfoTemplateUrl="js/angular/import/templates/fileSizeLimitInfo.html";const c=()=>{if(s.isPristine(e.activeTabId)){const t=i.getResources();e.isHelpVisible=!t||0===t.length}else e.isHelpVisible=s.isHelpVisible(e.activeTabId)};e.openTab=e=>{i.updateActiveTabId(e)},e.toggleHelp=()=>{s.setIsHelpVisible(e.activeTabId,!e.isHelpVisible),c()};const r=[];r.push(i.onActiveTabIdUpdated(i=>{e.activeTabId=i,t.hash(e.activeTabId),c()})),r.push(i.onResourcesUpdated(c));e.$on("$destroy",()=>r.forEach(e=>e())),(()=>{s=new o;const i=t.hash()||n.TABS.USER;e.openTab(i),c()})()}angular.module("graphdb.framework.impex.import.controllers.tab",[]).controller("TabController",s),s.$inject=["$scope","$location","ImportContextService"];class o{constructor(){this._helpVisibility={[n.TABS.USER]:{isHelpVisible:void 0},[n.TABS.SERVER]:{isHelpVisible:void 0}}}isPristine(e){return void 0===this._helpVisibility[e].isHelpVisible}setIsHelpVisible(e,t){this._helpVisibility[e].isHelpVisible=t}isHelpVisible(e){return this._helpVisibility[e]&&this._helpVisibility[e].isHelpVisible}}},68:function(e,t,i){"use strict";i.r(t),i.d(t,"ImportResourceStatus",(function(){return n}));const n={NONE:"NONE",UPLOADING:"UPLOADING",UPLOAD_ERROR:"UPLOAD_ERROR",UPLOADED:"UPLOADED",PENDING:"PENDING",IMPORTING:"IMPORTING",DONE:"DONE",ERROR:"ERROR",INTERRUPTING:"INTERRUPTING"}},78:function(e,t,i){"use strict";i.r(t),i.d(t,"TABS",(function(){return o}));var n=i(27),s=i(68);const o={USER:"user",SERVER:"server"};function c(e){let t=o.USER,i=[],c=[],r=[],a=!0,d=[];return{updateActiveTabId:function(i){t=i,e.emitSync("activeTabIdUpdated",p())},getActiveTabId:p,onActiveTabIdUpdated:function(t){return e.subscribeSync("activeTabIdUpdated",e=>t(e))},getFiles:f,addFile:function(t){const i=f();i.push(t),b(i),e.emitSync("fileAdded",Object(n.cloneDeep)(t))},updateFiles:b,onFilesUpdated:function(t){return e.subscribeSync("filesUpdated",e=>t(e))},getImportedResources:m,updateImportedResources:function(t){i=t,e.emitSync("importedResourcesUpdated",m()),e.emitSync("resourcesUpdated",R())},onImportedResourcesUpdated:function(t){return e.subscribeSync("importedResourcesUpdated",e=>t(e))},getResources:R,onResourcesUpdated:function(t){return e.subscribeSync("resourcesUpdated",e=>t(e))},updateShowLoader:function(t){a=t,e.emitSync("showLoaderUpdated",l())},getShowLoader:l,onShowLoaderUpdated:function(t){return e.subscribeSync("showLoaderUpdated",e=>t(e))},updateSelectedFilesNames:function(t){d=Object(n.cloneDeep)(t),e.emitSync("selectedFilesNamesUpdated",u())},getSelectedFilesNames:u,onSelectedFilesNamesUpdated:function(t){return e.subscribeSync("selectedFilesNamesUpdated",e=>t(e))},updateResourceForUpload:function(e){const t=S(),i=t.find(({name:t})=>t===e.name);i?Object.assign(i,e):t.push(e);U(t)},getResourceForUpload:function(e){return Object(n.cloneDeep)(c.find(({name:t})=>t===e))},updateResourcesForUpload:U,getResourcesForUpload:S,onResourcesForUploadChanged:function(t){return e.subscribeSync("resourcesForUploadChanged",e=>t(e))}};function u(){return Object(n.cloneDeep)(d)}function l(){return a}function p(){return t}function b(t){r=Object(n.cloneDeep)(t),e.emitSync("filesUpdated",f())}function f(){return Object(n.cloneDeep)(r)}function m(){return Object(n.cloneDeep)(i)||[]}function R(){const e=m();let t=S();const i=[],n=[];return e.forEach(({name:e})=>{const o=t.find(({name:t})=>t===e);o&&(o.status===s.ImportResourceStatus.UPLOADED?i.push(o):n.push(o))}),i.length>0&&(t=t.filter(({name:e})=>!i.some(({name:t})=>t===e)),U(t,!1)),e.filter(({name:e})=>!n.some(t=>e===t)).concat(t)}function U(t,i=!0){c=Object(n.cloneDeep)(t),e.emitSync("resourcesForUploadChanged",S()),i&&e.emitSync("resourcesUpdated",R())}function S(){return Object(n.cloneDeep)(c)||[]}}angular.module("graphdb.framework.import.services.importcontext",[]).factory("ImportContextService",c),c.$inject=["EventEmitterService"]}}]);